version: "3.8"

services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: sportverein
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sportverein"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - sportverein_dev_network

  adminer:
    image: adminer
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sportverein_dev_network
      
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8082:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sportverein_dev_network

  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/workspace/app
      - ~/.m2:/root/.m2
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/sportverein
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_PROFILES_ACTIVE: dev
    ports:
      - "8080:8080"
      - "5007:5007" # Remote-Debugging
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sportverein_dev_network

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    ports:
      - "3000:3000"
    depends_on:
      - backend-dev
    networks:
      - sportverein_dev_network

volumes:
  postgres_data_dev:
    driver: local
  pgadmin_data:
    driver: local

networks:
  sportverein_dev_network:
    driver: bridge
